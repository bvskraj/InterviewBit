public class Solution {
    public int[] maxset(int[] A) {
        long sum = 0;
        long maxSum = -1;
        int start, end;
        int a, length;
        start = 1;
        end = -2;
        length = 0;
        a = -1;
        for (int i = 0; i < A.length; i++)
        {
            if (A[i] < 0)
            {
                if (sum == maxSum)
                {
                    if (length > end - start + 1)
                    {
                        start = a;
                        end = a + length - 1;
                    }
                }
                else if(sum > maxSum)
                {
                    start = a;
                    end = a + length - 1;
                    maxSum = sum;
                }
                sum = 0;
                a = -1;
                length = 0;
                continue;
            }
            a = a < 0 ? i : a;
            length++;
            sum += A[i];
        }
        if (sum == maxSum)
        {
            if (length > end - start + 1)
            {
                start = a;
                end = a + length - 1;
            }
        }
        else if(sum > maxSum)
        {
            start = a;
            end = a + length - 1;
            maxSum = sum;
        }
        if (start == -1)
        {
            return new int[0];
        }
        return Arrays.copyOfRange(A, start, end + 1);
    }
}
